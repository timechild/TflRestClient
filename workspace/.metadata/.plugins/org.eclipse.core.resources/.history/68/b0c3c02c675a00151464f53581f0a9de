package org.disruptiontables.service;

import java.util.ArrayList;
import java.util.List;

import org.disruptiontables.dao.Branch;
import org.disruptiontables.dao.Station;
import org.disruptiontables.dao.WriterDao;
import org.disruptiontables.util.ParseData;

public class StationService {

	public List<Station> getAllStations(){
		WriterDao dao = new WriterDao();
		List<Station> stationList = new ArrayList<>();
		
		try{
			dao.setDBConnection();
			stationList = dao.getAllStations();
		}
		catch(Exception e){
			System.out.println("StationService error: "+e.toString());
		}
		return stationList;
	}
	
	public List<Station> getAllStations(int line){
		WriterDao dao = new WriterDao();
		List<Station> stationList = new ArrayList<>();
		
		try{
			dao.setDBConnection();
			stationList = dao.getAllStations();
		}
		catch(Exception e){
			System.out.println("StationService error: "+e.toString());
		}
		return stationList;
	}
	
	
	public List<Station> getSortedStations(String fromStr, String toStr, String lineStr){
		
		System.out.println("sorted stations");
		ParseData parse = new ParseData();
		int to, from, line;
		
		//try to parse input String to integer for query
		if(parse.parseStringToInt(toStr))
			to = Integer.parseInt(toStr); 
		else
			int tooo = ss.getStationId(to);
			
		 
		
		
		
		List<Station> stationList = new ArrayList<Station>();
		List<Branch> branchList = new ArrayList<Branch>();
		
		System.out.println("sorted stations");
		try{
			WriterDao dao = new WriterDao();
			dao.setDBConnection();
		
			//get line branches form the DB
			branchList = dao.getAllLineBranches(line);
			
			//sort branches of the line from start to end
			LineService ls = new LineService();
			branchList = ls.sortBranches(branchList, from, to);
			
			//create new connection for new DB query
			dao = new WriterDao();
			dao.setDBConnection();
			
			//get list of stations based start and end location
			stationList = dao.getSortedStations(branchList);
			//dao.setDBConnection();
			//stationList = dao.getAllStations();
		}
		catch(Exception e){
			System.out.println("StationService error: "+e.toString());
		}
		return stationList;
	}
	
	
	public int getStationId(String stationName){
		WriterDao dao = new WriterDao();
		Station station = new Station();
		
		try{
			dao.setDBConnection();
			station = dao.getStationId(stationName);
		}
		catch(Exception e){
			System.out.println("getStationId error: "+e.toString());
		}
		return station.getStationId();
	}
	
	
}
